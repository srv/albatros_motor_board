#! /usr/bin/env python
#*
#*  Author Joan Pau Beltran
#*  SRV - UIB
#*
#***********************************************************

# Motor board dynamic parameters

PACKAGE='albatros_motor_board'
NODE='motor_board_node'
CONFIG='MotorBoardDynParams'

import roslib; roslib.load_manifest(PACKAGE)

from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()


# Publish rate for output topics
gen.add("rate_speeds",
        double_t,
        SensorLevels.RECONFIGURE_RUNNING,
        "Publishing rate for motor speeds topic (0.0 disables publishing)",
        10.0, 0.0, 100.0)
gen.add("rate_status",
        double_t,
        SensorLevels.RECONFIGURE_RUNNING,
        "Publishing rate for motor_status topic (0.0 disables publishing)",
        10.0, 0.0, 100.0)
gen.add("rate_pressure",
        double_t,
        SensorLevels.RECONFIGURE_RUNNING,
        "Publishing rate for pressure topic (0.0 disables publishing)",
        10.0, 0.0, 100.0)

gen.add("rate_humidity",
        double_t,
       SensorLevels.RECONFIGURE_RUNNING,
        "Publishing rate for humidity topic (0.0 disables publishing)",
        10.0, 0.0, 100.0)

# Serial port device file
gen.add("serial_port",
        str_t,
        SensorLevels.RECONFIGURE_CLOSE,
        "Serial port device file name (including full path)",
        "/dev/ttyS0")

# Pressure sensor offset
gen.add("pressure_offset", int_t, SensorLevels.RECONFIGURE_RUNNING, "Pressure sensor offset.", 0, -32768, +32767)
gen.add("waterin_offset", int_t, SensorLevels.RECONFIGURE_RUNNING, "Water in sensor offset.", 0, -32768, +32767)

# Motor PID
gen.add("forward_left_PID_on", bool_t, SensorLevels.RECONFIGURE_RUNNING, "front left PID state.", False)
gen.add("forward_left_PID_Kp", double_t, SensorLevels.RECONFIGURE_RUNNING, "front left  PID proportional constant.", 0.0, -1.0, 1.0)
gen.add("forward_left_PID_Ki", double_t, SensorLevels.RECONFIGURE_RUNNING, "front left  PID integral     constant.", 0.0, -1.0, 1.0)
gen.add("forward_left_PID_Kd", double_t, SensorLevels.RECONFIGURE_RUNNING, "front left  PID derivative   constant.", 0.0, -1.0, 1.0)

gen.add("forward_right_PID_on", bool_t, SensorLevels.RECONFIGURE_RUNNING, "front right PID state.", False)
gen.add("forward_right_PID_Kp", double_t, SensorLevels.RECONFIGURE_RUNNING, "front right  PID proportional constant.", 0.0, -1.0, 1.0)
gen.add("forward_right_PID_Ki", double_t, SensorLevels.RECONFIGURE_RUNNING, "front right  PID integral     constant.", 0.0, -1.0, 1.0)
gen.add("forward_right_PID_Kd", double_t, SensorLevels.RECONFIGURE_RUNNING, "front right  PID derivative   constant.", 0.0, -1.0, 1.0)

gen.add("downward_left_PID_on", bool_t, SensorLevels.RECONFIGURE_RUNNING, "down left PID state.", False)
gen.add("downward_left_PID_Kp", double_t, SensorLevels.RECONFIGURE_RUNNING, "down left  PID proportional constant.", 0.0, -1.0, 1.0)
gen.add("downward_left_PID_Ki", double_t, SensorLevels.RECONFIGURE_RUNNING, "down left  PID integral     constant.", 0.0, -1.0, 1.0)
gen.add("downward_left_PID_Kd", double_t, SensorLevels.RECONFIGURE_RUNNING, "down left  PID derivative   constant.", 0.0, -1.0, 1.0)

gen.add("downward_right_PID_on", bool_t, SensorLevels.RECONFIGURE_RUNNING, "down right PID state.", False)
gen.add("downward_right_PID_Kp", double_t, SensorLevels.RECONFIGURE_RUNNING, "down right  PID proportional constant.", 0.0, -1.0, 1.0)
gen.add("downward_right_PID_Ki", double_t, SensorLevels.RECONFIGURE_RUNNING, "down right  PID integral     constant.", 0.0, -1.0, 1.0)
gen.add("downward_right_PID_Kd", double_t, SensorLevels.RECONFIGURE_RUNNING, "down right  PID derivative   constant.", 0.0, -1.0, 1.0)

# Motor accelerations
gen.add("forward_left_accel"  , int_t, SensorLevels.RECONFIGURE_RUNNING, "front left  acceleration (%/ds).", 5, 0, 100)
gen.add("forward_right_accel" , int_t, SensorLevels.RECONFIGURE_RUNNING, "front right acceleration (%/ds).", 5, 0, 100)
gen.add("downward_left_accel" , int_t, SensorLevels.RECONFIGURE_RUNNING, "down  left  acceleration (%/ds).", 5, 0, 100)
gen.add("downward_right_accel", int_t, SensorLevels.RECONFIGURE_RUNNING, "down  right acceleration (%/ds).", 5, 0, 100)

# Motor speed inversion
gen.add("forward_left_invert"  , bool_t, SensorLevels.RECONFIGURE_RUNNING, "front left  speed inversion.", False)
gen.add("forward_right_invert" , bool_t, SensorLevels.RECONFIGURE_RUNNING, "front right speed inversion.", True)
gen.add("downward_left_invert" , bool_t, SensorLevels.RECONFIGURE_RUNNING, "down  left  speed inversion.", False)
gen.add("downward_right_invert", bool_t, SensorLevels.RECONFIGURE_RUNNING, "down  right speed inversion.", True)

# generate the motor board parameter class
exit(gen.generate(PACKAGE, NODE, CONFIG))
